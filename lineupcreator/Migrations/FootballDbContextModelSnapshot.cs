// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lineupcreator.Components.Services;

#nullable disable

namespace lineupcreator.Migrations
{
    [DbContext(typeof(FootballDbContext))]
    partial class FootballDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lineupcreator.Components.Data.Club", b =>
                {
                    b.Property<int>("club_team_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("club_team_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("club_team_id"));

                    b.Property<string>("club_logo_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("club_logo_url");

                    b.Property<string>("club_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("club_name");

                    b.Property<string>("league_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("league_name");

                    b.HasKey("club_team_id");

                    b.ToTable("club", (string)null);
                });

            modelBuilder.Entity("lineupcreator.Components.Data.Nation", b =>
                {
                    b.Property<int>("nationality_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("nationality_id"));

                    b.Property<string>("nation_flag_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nation_flag_url");

                    b.Property<string>("nationality_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality_name");

                    b.HasKey("nationality_id");

                    b.ToTable("nationality", (string)null);
                });

            modelBuilder.Entity("lineupcreator.Components.Data.Player", b =>
                {
                    b.Property<int>("sofifa_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sofifa_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sofifa_id"));

                    b.Property<int>("age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("club_jersey_number")
                        .HasColumnType("int")
                        .HasColumnName("club_jersey_number");

                    b.Property<int?>("club_team_id")
                        .HasColumnType("int")
                        .HasColumnName("club_team_id");

                    b.Property<int?>("defending")
                        .HasColumnType("int")
                        .HasColumnName("defending");

                    b.Property<int?>("dribbling")
                        .HasColumnType("int")
                        .HasColumnName("dribbling");

                    b.Property<int>("height_cm")
                        .HasColumnType("int")
                        .HasColumnName("height_cm");

                    b.Property<string>("long_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("long_name");

                    b.Property<int>("nationality_id")
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    b.Property<int>("overall")
                        .HasColumnType("int")
                        .HasColumnName("overall");

                    b.Property<int?>("pace")
                        .HasColumnType("int")
                        .HasColumnName("pace");

                    b.Property<int?>("passing")
                        .HasColumnType("int")
                        .HasColumnName("passing");

                    b.Property<int?>("physic")
                        .HasColumnType("int")
                        .HasColumnName("physic");

                    b.Property<string>("player_face_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("player_face_url");

                    b.Property<string>("player_positions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("player_positions");

                    b.Property<string>("player_traits")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("player_traits");

                    b.Property<string>("preferred_foot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("preferred_foot");

                    b.Property<int?>("shooting")
                        .HasColumnType("int")
                        .HasColumnName("shooting");

                    b.Property<string>("short_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_name");

                    b.Property<int>("skill_moves")
                        .HasColumnType("int")
                        .HasColumnName("skill_moves");

                    b.Property<int>("weak_foot")
                        .HasColumnType("int")
                        .HasColumnName("weak_foot");

                    b.Property<string>("work_rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("work_rate");

                    b.HasKey("sofifa_id");

                    b.HasIndex("club_team_id");

                    b.HasIndex("nationality_id");

                    b.ToTable("player", (string)null);
                });

            modelBuilder.Entity("lineupcreator.Components.Data.Player", b =>
                {
                    b.HasOne("lineupcreator.Components.Data.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("club_team_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("lineupcreator.Components.Data.Nation", "Nation")
                        .WithMany("Players")
                        .HasForeignKey("nationality_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("lineupcreator.Components.Data.Club", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("lineupcreator.Components.Data.Nation", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
